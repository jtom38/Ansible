---
- name: backup frontend services
  hosts: mediaserver-front
  become: true
  vars:
    dvb_path_backup:    '/docker/nfs/backup'
    dvb_backup_volume:  '/config'
    dvb_container_name: 'plex'
    discord_webhook:    "{{ discord_mm_hook }}"
    discord_name:       "Ansible Monitor"
    discord_type:       "fancy"
    discord_title:      "Frontend - Backup"
    #discord_color:      "12255487"

  tasks:
    - include_role:
        name: ansible_discord_webhook
      vars:
        discord_message: "Backup Job:\nJob is starting.  Services will be going offline and brought back up once the service has finished."
      
    - name: stop container
      docker_container:
        name: plex
        state: stopped

    - name: Ensure /tmp is ready
      file:
        path: '/tmp/docker/backup/plex'
        state: directory

    - name: Copy db files
      copy:
        remote_src: true
        src: '/docker/cfg/plex/Library/Application Support/Plex Media Server/Plug-in Support/Databases/'
        dest: '/tmp/docker/backup/plex/'

    - name: start container
      docker_container:
        name: plex
        state: started

    - name: Archive db backups
      archive:
        path: '/tmp/docker/backup/plex/'
        dest: '/tmp/docker/backup/plex/databases.gz'

    - name: Ensure nfs has a backup location
      file:
        path: '/docker/nfs/backup/plex'
        state: directory

    - name: Copy archive to a safe place
      copy:
        src:        '/tmp/docker/backup/plex/databases.gz'
        dest:       '/docker/nfs/backup/plex/databases.gz'
        remote_src: true
        backup:     true

    - name: remove temp files
      file:
        path: '/tmp/docker/backup/plex'
        state: absent

    #- include_role:
    #    name: ansible-role-docker-volume-backup

    - include_role:
        name: ansible_discord_webhook
      vars:
        discord_message: "Backup Job:\nJob has finished and services should be back online."

