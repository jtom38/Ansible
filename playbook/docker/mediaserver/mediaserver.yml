
- name: Configure Media Server
  hosts: mediaserver
  become: yes
  vars:
    pathDockerRoot: "/docker"
    pathConfig:     "{{ pathDockerRoot }}/config"
    pathMedia:      "{{ pathDockerRoot }}/media"
    pathDownloads:  "{{ pathDockerRoot }}/downloads"
    nfsAddress:     192.168.0.16
    nfsDockerConfig: "docker"
    nfsMedia:       "plex"
    #nfsMovies:      "plex"
    #nfsTV:          "plex"
    dockerNetwork:  mediaserver
  
  tasks:
    - name: install docker
      import_role:
        name: geerlingguy.docker
      become: yes

    - name: make docker folder location
      file:
        path: "{{ pathDockerRoot }}"
        state: directory

    - name: make docker config folder
      file:
        path: "{{ pathConfig }}"
        state: directory

    - name: make download folder
      file:
        path: "{{ pathDownloads }}"
        state: directory

    - name: make media folder
      file:
        path: "{{ pathMedia }}"
        state: directory

    - name: mount nfs to /docker/config
      mount:
        src: "{{ nfsAddress }}:/{{ nfsDockerConfig }}"
        path: "{{ pathConfig }}"
        fstype: nfs
        boot: yes
        state: mounted

    - name: mount nfs to /docker/plex
      mount:
        src: "{{ nfsAddress }}:/{{ nfsMedia }}"
        path: "{{ pathMedia }}"
        fstype: nfs
        boot: yes
        state: mounted

    - name: install docker pip package
      pip:
        name: docker
        state: present
        executable: pip3

    - name: make docker network
      docker_network:
        name: "{{ dockerNetwork }}"

    - name: stop hydra
      docker_container:
        name: hydra
        state: stopped
      ignore_errors: yes

    - name: Make Hydra
      docker_container:
        name: hydra
        image: 'linuxserver/hydra2:latest'
        state: started
        env:
          #PUID=1000
          #PGID=1000
          PUID=0
          PGID=0
          TZ=Europe/London
        ports:
          - 5076:5076
        volumes:
          #- "{{ hydra_config }}:/config"
          - "{{ pathConfig }}/hydra:/config"
          - "{{ pathDownloads }}:/downloads"
        networks:
          - name: "{{ dockerNetwork }}"

    - name: stop sonarr
      docker_container:
        name: sonarr
        state: stopped
      ignore_errors: yes

    - name: start sonarr
      docker_container:
        name: sonarr
        image: linuxserver/sonarr:latest
        state: started
        env:
          # Use 0 because this runs as root
          #PUID=1000
          #PGID=1000
          PUID=0
          PGID=0
          TZ=Europe/London
          UMASK_SET=022 #optional
        ports:
          - 8989:8989
        volumes:
          - "{{ pathConfig }}/sonarr:/config"
          - "{{ pathMedia }}:/tv"
          - "{{ pathDownloads }}:/downloads"
        networks:
          - name: "{{ dockerNetwork }}"

    - name: stop nzb
      docker_container:
        name: nzbget
        state: stopped
      ignore_errors: yes

    - name: Make Nzb
      docker_container:
        name: nzbget
        image: linuxserver/nzbget:latest
        state: started
        env:
          PUID=0
          PGID=0
          TZ=Europe/London
        ports:
          - 6789:6789
        volumes:
          - "{{ pathConfig }}/nzbget:/config"
          - "{{ pathDownloads }}:/downloads"
        networks:
          - name: "{{ dockerNetwork }}"

    - name: Stop Radarr if present
      docker_container:
        name: radarr
        state: stopped
      ignore_errors: yes

    - name: Start Radarr
      docker_container:
        name: radarr
        image: linuxserver/radarr:latest
        state: started
        env:
          PUID=0
          PGID=0
          TZ=Europe/London
          UMASK_SET=022 #optional
        ports:
          - 7878:7878
        volumes:
          - "{{ pathConfig }}/radarr:/config"
          - "{{ pathMedia }}:/movies"
          - "{{ pathDownloads }}:/downloads"
        networks:
          - name : "{{ dockerNetwork }}"

    - name: Stop Plex
      docker_container:
        name: plex
        state: stopped
      ignore_errors: yes

    - name: Start Plex
      docker_container:
        name: plex
        image: linuxserver/plex:latest
        state: started
        network_mode: host
        env:
          PUID=0
          PGID=0
          TZ=Europe/London
          UMASK_SET=022
        volumes:
          - "{{ pathConfig }}/plex:/config"
          - "{{ pathMedia }}:/tv"
          #- /path/to/movies:/movies
        #networks:
        #  - name: "{{ dockerNetwork }}"
